<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.7.xsd ">


	<context:component-scan base-package="com.wjl.main" />

	<context:property-placeholder location="classpath:myproperties.properties" />

	<!-- 配置静态资源的访问；如果配置了mvc:resources则mvc:annotation-driven必须配置，不然只能访问静态资源而无法访问Controller -->
	<mvc:annotation-driven />
	<mvc:resources mapping="/static/**" location="/static/" />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
		
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="root"></property>
		<property name="password" value="123"></property>
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3306/wjldb"></property>
		<property name="initialPoolSize" value="5"></property>
		<property name="maxPoolSize" value="10"></property>
	</bean>

	<tx:annotation-driven />
	
	<!-- 引入redis缓存 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxTotal}" /> 
        <property name="maxIdle" value="${redis.pool.maxIdle}" /> 
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" /> 
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" /> 	
	</bean>
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"> 
        <property name="hostName" value="${redis.ip}" /> 
        <property name="port" value="${redis.port}" /> 
        <property name="password" value="${redis.password}" /> 
        <property name="poolConfig" ref="jedisPoolConfig" /> 
    </bean> 
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"> 
        <property name="connectionFactory" ref="jedisConnectionFactory" /> 
    </bean>
	
	
<!-- rabbit:annotation-driven相当于配置类中的@EnableRabbit必不可少 -->
<rabbit:annotation-driven/>
<bean id="connectionFactory" class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory">
<property name="host" value="localhost"/>
</bean>

<!-- 消息转换器必须在 RabbitTemplate和RabbitListenerContainerFactory中同时被引用或不被引用；
	  如果只传递字符串则也可以不定义（推荐定义）MessageConverter，如果需要接收其它类型则必须定义（也可以接收字符串）-->
<bean id="messageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" >
    <property name="classMapper">
        <bean class="org.springframework.amqp.support.converter.DefaultClassMapper">
            <property name="defaultType" value="com.wjl.main.User"/>
        </bean>
    </property>
</bean>

<bean id="rabbitListenerContainerFactory" class="org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory">
<property name="connectionFactory" ref="connectionFactory"></property>
<property name="messageConverter" ref="messageConverter"></property>
<property name="concurrentConsumers" value="3"></property>
<property name="maxConcurrentConsumers" value="10"></property>
</bean>

<bean id="rabbitTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
<constructor-arg ref="connectionFactory"/>
<property name="messageConverter" ref="messageConverter"></property>
</bean>
<!-- queue,exchanage,binding都可以在@RabbitListener中声明也可以在这里定义，当应用启动时会
	  自动在rabbitmq的服务器端创建（如果已经存在，再次声明时属性必须相同，不然报错，然后不重
	  复创建直接获取）这些信息
<bean id="queue" class="org.springframework.amqp.core.Queue">
        <constructor-arg  value="myQueue"></constructor-arg>
        <constructor-arg index="1" value="true"></constructor-arg>
        <constructor-arg index="2" value="false"></constructor-arg>
        <constructor-arg index="3" value="false"></constructor-arg>
</bean> -->
</beans>
